<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml">

    <!-- Theme-specific color overrides and customizations -->
    
    <!-- Light Theme Customizations -->
    <ResourceDictionary x:Key="LightThemeResources">
        <SolidColorBrush x:Key="ItemEditorAccentBrush" Color="#0078D4"/>
        <SolidColorBrush x:Key="ItemEditorSurfaceBrush" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="ItemEditorBackgroundBrush" Color="#F3F2F1"/>
        <SolidColorBrush x:Key="ItemEditorBorderBrush" Color="#E1DFDD"/>
        <SolidColorBrush x:Key="ItemEditorTextPrimaryBrush" Color="#323130"/>
        <SolidColorBrush x:Key="ItemEditorTextSecondaryBrush" Color="#605E5C"/>
        
        <!-- Light theme specific shadows -->
        <DropShadowEffect x:Key="LightCardShadow" 
                          Color="#000000"
                          Direction="270" 
                          ShadowDepth="2" 
                          BlurRadius="8" 
                          Opacity="0.1" />
    </ResourceDictionary>
    
    <!-- Dark Theme Customizations -->
    <ResourceDictionary x:Key="DarkThemeResources">
        <SolidColorBrush x:Key="ItemEditorAccentBrush" Color="#60CDFF"/>
        <SolidColorBrush x:Key="ItemEditorSurfaceBrush" Color="#2D2D30"/>
        <SolidColorBrush x:Key="ItemEditorBackgroundBrush" Color="#1E1E1E"/>
        <SolidColorBrush x:Key="ItemEditorBorderBrush" Color="#3F3F46"/>
        <SolidColorBrush x:Key="ItemEditorTextPrimaryBrush" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="ItemEditorTextSecondaryBrush" Color="#CCCCCC"/>
        
        <!-- Dark theme specific shadows -->
        <DropShadowEffect x:Key="DarkCardShadow" 
                          Color="#000000"
                          Direction="270" 
                          ShadowDepth="3" 
                          BlurRadius="12" 
                          Opacity="0.3" />
    </ResourceDictionary>
    
    <!-- Common theme resources that adapt to system theme -->
    <Style x:Key="AdaptiveCardStyle" TargetType="{x:Type ui:Card}">
        <Setter Property="Background" Value="{DynamicResource CardBackgroundFillColorDefaultBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource CardStrokeColorDefaultBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="Padding" Value="16"/>
        <Setter Property="Margin" Value="4"/>
        <Style.Triggers>
            <!-- Light theme trigger -->
            <DataTrigger Binding="{Binding Source={x:Static ui:ApplicationThemeManager.Current}, Path=ApplicationTheme}" Value="Light">
                <Setter Property="Effect" Value="{StaticResource LightCardShadow}"/>
            </DataTrigger>
            <!-- Dark theme trigger -->
            <DataTrigger Binding="{Binding Source={x:Static ui:ApplicationThemeManager.Current}, Path=ApplicationTheme}" Value="Dark">
                <Setter Property="Effect" Value="{StaticResource DarkCardShadow}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <!-- Adaptive text styles -->
    <Style x:Key="AdaptiveHeaderStyle" TargetType="{x:Type ui:TextBlock}">
        <Setter Property="FontTypography" Value="BodyStrong"/>
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
        <Setter Property="Margin" Value="0,0,0,8"/>
    </Style>
    
    <Style x:Key="AdaptiveBodyStyle" TargetType="{x:Type ui:TextBlock}">
        <Setter Property="FontTypography" Value="Body"/>
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    
    <Style x:Key="AdaptiveCaptionStyle" TargetType="{x:Type ui:TextBlock}">
        <Setter Property="FontTypography" Value="Caption"/>
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}"/>
    </Style>
    
    <!-- Theme-aware button styles -->
    <Style x:Key="AdaptivePrimaryButtonStyle" TargetType="{x:Type ui:Button}">
        <Setter Property="Appearance" Value="Primary"/>
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="Padding" Value="16,8"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Background" Value="{DynamicResource SystemAccentColorBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextOnAccentFillColorPrimaryBrush}"/>
    </Style>
    
    <!-- Theme transition animations -->
    <Storyboard x:Key="ThemeTransitionStoryboard">
        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                         From="0.8" To="1.0"
                         Duration="0:0:0.3"
                         EasingFunction="{x:Static PowerEase.EaseOut}"/>
    </Storyboard>
    
    <!-- Modern focus visual style -->
    <Style x:Key="ModernFocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Stroke="{DynamicResource SystemAccentColorBrush}"
                               StrokeThickness="2"
                               StrokeDashArray="2 2"
                               SnapsToDevicePixels="True"
                               RadiusX="4"
                               RadiusY="4"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Apply modern focus visual to all focusable controls -->
    <Style TargetType="{x:Type Control}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ModernFocusVisualStyle}"/>
    </Style>
    
    <!-- Enhanced Fluent Design System Integration -->
    
    <!-- Acrylic and Mica effect styles for modern appearance -->
    <Style x:Key="AcrylicBackgroundStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{DynamicResource AcrylicBackgroundFillColorDefaultBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource CardStrokeColorDefaultBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="8"/>
    </Style>
    
    <!-- Modern elevation styles with proper shadows -->
    <Style x:Key="ElevationLevel1Style" TargetType="{x:Type FrameworkElement}">
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="{DynamicResource SystemChromeBlackMediumColor}"
                                  Direction="270" 
                                  ShadowDepth="1" 
                                  BlurRadius="4" 
                                  Opacity="0.1" />
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ElevationLevel2Style" TargetType="{x:Type FrameworkElement}">
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="{DynamicResource SystemChromeBlackMediumColor}"
                                  Direction="270" 
                                  ShadowDepth="2" 
                                  BlurRadius="8" 
                                  Opacity="0.15" />
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ElevationLevel3Style" TargetType="{x:Type FrameworkElement}">
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="{DynamicResource SystemChromeBlackMediumColor}"
                                  Direction="270" 
                                  ShadowDepth="4" 
                                  BlurRadius="16" 
                                  Opacity="0.2" />
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Enhanced WPFUI control styles with Fluent Design -->
    <Style x:Key="FluentCardStyle" TargetType="{x:Type ui:Card}">
        <Setter Property="Background" Value="{DynamicResource CardBackgroundFillColorDefaultBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource CardStrokeColorDefaultBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="Padding" Value="16"/>
        <Setter Property="Margin" Value="4"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource CardBackgroundFillColorSecondaryBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Modern button styles with Fluent Design -->
    <Style x:Key="FluentPrimaryButtonStyle" TargetType="{x:Type ui:Button}">
        <Setter Property="Appearance" Value="Primary"/>
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="Padding" Value="16,8"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Background" Value="{DynamicResource AccentAAFillColorDefaultBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextOnAccentFillColorPrimaryBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource AccentAAFillColorSecondaryBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource AccentAAFillColorTertiaryBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="FluentSecondaryButtonStyle" TargetType="{x:Type ui:Button}">
        <Setter Property="Appearance" Value="Secondary"/>
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="Padding" Value="16,8"/>
        <Setter Property="Background" Value="{DynamicResource ControlFillColorDefaultBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ControlFillColorSecondaryBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource ControlStrokeColorSecondaryBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Enhanced text input styles -->
    <Style x:Key="FluentTextBoxStyle" TargetType="{x:Type ui:TextBox}">
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="Padding" Value="8,6"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="{DynamicResource ControlFillColorDefaultBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource AccentAAFillColorDefaultBrush}"/>
                <Setter Property="Background" Value="{DynamicResource ControlFillColorInputActiveBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ControlFillColorSecondaryBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Modern navigation and menu styles -->
    <Style x:Key="FluentNavigationViewStyle" TargetType="{x:Type ui:NavigationView}">
        <Setter Property="Background" Value="{DynamicResource LayerFillColorDefaultBrush}"/>
        <Setter Property="IsPaneToggleButtonVisible" Value="True"/>
        <Setter Property="OpenPaneLength" Value="280"/>
        <Setter Property="CompactPaneLength" Value="48"/>
        <Setter Property="PaneDisplayMode" Value="Auto"/>
    </Style>
    
    <!-- Enhanced info bar styles for status and notifications -->
    <Style x:Key="FluentInfoBarStyle" TargetType="{x:Type ui:InfoBar}">
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Style.Triggers>
            <Trigger Property="Severity" Value="Informational">
                <Setter Property="Background" Value="{DynamicResource SystemFillColorNeutralBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource SystemFillColorNeutralBrush}"/>
            </Trigger>
            <Trigger Property="Severity" Value="Success">
                <Setter Property="Background" Value="{DynamicResource SystemFillColorSuccessBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource SystemFillColorSuccessBrush}"/>
            </Trigger>
            <Trigger Property="Severity" Value="Warning">
                <Setter Property="Background" Value="{DynamicResource SystemFillColorCautionBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource SystemFillColorCautionBrush}"/>
            </Trigger>
            <Trigger Property="Severity" Value="Error">
                <Setter Property="Background" Value="{DynamicResource SystemFillColorCriticalBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource SystemFillColorCriticalBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Modern progress indicators -->
    <Style x:Key="FluentProgressRingStyle" TargetType="{x:Type ui:ProgressRing}">
        <Setter Property="Foreground" Value="{DynamicResource AccentAAFillColorDefaultBrush}"/>
        <Setter Property="Width" Value="24"/>
        <Setter Property="Height" Value="24"/>
    </Style>
    
    <Style x:Key="FluentProgressBarStyle" TargetType="{x:Type ui:ProgressBar}">
        <Setter Property="Background" Value="{DynamicResource ControlStrokeColorDefaultBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource AccentAAFillColorDefaultBrush}"/>
        <Setter Property="Height" Value="4"/>
        <Setter Property="CornerRadius" Value="2"/>
    </Style>
    
    <!-- Enhanced list and data display styles -->
    <Style x:Key="FluentListViewStyle" TargetType="{x:Type ListView}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling"/>
    </Style>
    
    <!-- Modern expander style with Fluent Design -->
    <Style x:Key="FluentExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="Background" Value="{DynamicResource CardBackgroundFillColorDefaultBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource CardStrokeColorDefaultBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="Padding" Value="12"/>
        <Setter Property="Margin" Value="0,2"/>
        <Style.Triggers>
            <Trigger Property="IsExpanded" Value="True">
                <Setter Property="Background" Value="{DynamicResource CardBackgroundFillColorSecondaryBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>